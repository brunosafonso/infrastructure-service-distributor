# ------------------------------------------------------------------------

# This rules are designed to ban ips from already blocked IPS on nginx using
# the status request response sended from limite_req_zone, since nginx
# does not have a logic that bans IPS, only prevent access based on rate

# ------------------------------------------------------------------------


# Create IP collection
SecAction "id:'50200', phase:1, initcol:ip=%{REMOTE_ADDR}"

# If block_count > 1 deny access
SecRule IP:BLOCK_COUNT "@ge 1" \
    "id:'50202',\
    phase:2,\
    deny,\
    status:403,\
    msg:'IP temporary blocked: %{REMOTE_ADDR} - Timestamp=%{IP:BLOCK_COUNT_TIMESTAMP}'"

# If read response status sended from nginx limite_req_zone block IP increment block_count, reset every block_count_timestamp defined seconds
SecRule RESPONSE_STATUS "@streq ${LIMIT_REQ_STATUS}" \
    "id:'50201',\
    phase:3,\
    pass,\
    setvar:ip.block_count=+1,\
    setvar:'ip.block_count_timestamp=%{TIME_EPOCH}',\
    setvar:'ip.block_count_timestamp=+${LIMIT_REQ_BAN_TIME}'"

# Workaround to expirevar, unset var if now is smaller than time_epoch 
SecRule &IP:BLOCK_COUNT_TIMESTAMP "@eq 1" \
    "id:50203,\
    phase:3,\
    pass,\
    t:none,\
    nolog,\
    chain" 
        SecRule IP:BLOCK_COUNT_TIMESTAMP "@lt %{TIME_EPOCH}" \
        "setvar:'!ip.block_count',\
        setvar:'!ip.block_count_timestamp'"
